@model Optimus.Models.BundleViewModel
@using Optimus.Helpers
@using umbraco
@{
    var startDir = "/css/";
    var exampleScript = "Styles";
    var ext = "css";
    var filter = Optimus.Settings.GetSetting("onlyAllowCssFilesInEditor") == "True" ? "*.css" : "*.*";

    if (Request["bundleType"] == "script")
    {
        startDir = "/scripts/";
        exampleScript = "Scripts";
        ext = "js";
        filter = Optimus.Settings.GetSetting("onlyAllowJsFilesInEditor") == "True" ? "*.js" : "*.*";
    }

    //startDir = "/";
    //filter = "*.*";
}
<!doctype html>
<html>
<head>
    <title>Bundle editor</title>

    <script src="~/App_Plugins/Optimus/scripts/jquery-2.0.3.js"></script>
    <script src="~/App_Plugins/Optimus/scripts/jquery-ui-1.10.2.js"></script>
    <script src="~/App_Plugins/Optimus/scripts/jqueryFileTree.js"></script>
    <script src="~/App_Plugins/Optimus/scripts/underscore.js"></script>

    @if (CompatibilityHelper.IsVersion7OrNewer)
    {

        <link href="~/umbraco_client/splitbutton/splitbutton.css?cdv=1" type="text/css" rel="stylesheet" />
        <link href="~/umbraco/assets/css/umbraco.css?cdv=1" type="text/css" rel="stylesheet" />
        <link href="~/umbraco_client/menuicon/style.css?cdv=1" type="text/css" rel="stylesheet" />

        <script src="~/umbraco_client/Application/NamespaceManager.js?cdv=1" type="text/javascript"></script>



        <script src="~/umbraco_client/Application/jQuery/jquery.cookie.js?cdv=1" type="text/javascript"></script>

        <script src="~/umbraco_client/Application/UmbracoApplicationActions.js?cdv=1" type="text/javascript"></script>
        <script src="~/umbraco_client/Application/UmbracoUtils.js?cdv=1" type="text/javascript"></script>
        <script src="~/umbraco_client/Application/UmbracoClientManager.js?cdv=1" type="text/javascript"></script>


        <script src="~/umbraco_client/ui/default.js?cdv=1" type="text/javascript"></script>

        <script src="~/umbraco/lib/bootstrap/js/bootstrap.2.3.2.min.js?cdv=1" type="text/javascript"></script>
        <script src="~/umbraco/lib/umbraco/compat.js?cdv=1" type="text/javascript"></script>


    }
    else
    {
        <script src="~/umbraco_client/Application/NamespaceManager.js?cdv=2" type="text/javascript"></script>
        <script src="~/umbraco_client/Application/UmbracoApplicationActions.js?cdv=2" type="text/javascript"></script>
        <script src="~/umbraco_client/Application/UmbracoUtils.js?cdv=2" type="text/javascript"></script>
        <script src="~/umbraco_client/Application/UmbracoClientManager.js?cdv=2" type="text/javascript"></script>

        <script src="~/umbraco_client/ui/default.js?cdv=2" type="text/javascript"></script>


        <!-- Umbraco UI -->
        <link href="~/umbraco_client/ui/default.css" rel="stylesheet" />
        <link href="~/umbraco_client/menuicon/style.css" rel="stylesheet" />
        <link href="~/umbraco_client/panel/style.css" rel="stylesheet" />
        <link href="~/umbraco_client/propertypane/style.css" rel="stylesheet" />
        <link href="~/umbraco_client/scrollingmenu/style.css" rel="stylesheet" />


    }

    <link href="~/App_Plugins/Optimus/Content/jqueryFileTree.css" rel="stylesheet">

    <link href="~/App_Plugins/Optimus/Content/style.css?u=y" rel="stylesheet">
    @if (!CompatibilityHelper.IsVersion7OrNewer)
    {
        <link href="~/App_Plugins/Optimus/Content/stylev6.css" rel="stylesheet">
    }
    else
    {
        <link href="~/App_Plugins/Optimus/Content/stylev7.css?update=yupyup" rel="stylesheet">
    }
    <script>

        var data = [];
        var snd = new Audio("../../../../App_Plugins/Optimus/Content/Morphing.mp3");

        function FillData() {

            data.VirtualPath = $('#VirtualPath').val();
            data.Files = [];
            $('#selected_files .file').each(function () {
                data.Files.push($(this).attr('rel'));
            });
            data.Directories = [];
            $('#selected_files .directory').each(function () {
                data.Directories.push($(this).attr('rel'));
            });
        }

        $(document).ready(function () {

            @if (Optimus.Helpers.CompatibilityHelper.IsVersion7OrNewer)
                 {
                     <text>
            // Setup drop down menu
            $('.dropdown-toggle').dropdown();

            // Fix input element click problem
            $('.dropdown-menu input, .dropdown-menu label').click(function (e) {
                e.stopPropagation();
            });
            </text>
                 }
            //Setup file tree
            $('#file_tree').fileTree({
                script: '../../../../App_Plugins/Optimus/Services/jqueryfiletree.aspx',
                root: '@startDir',
                fileFilter: '@filter',
            }, function (file) {
                //If it's a file...
                file = '~' + file;
                if (!_.contains(data.Files, file)) {
                    $('#selected_files').append('<li class="file ext_@ext" rel="' + file + '">' + file + ' <span class="delete"></span></li>');

                    data.Files.push(file);
                }
            }, function (folder) {
                //If it's a folder in the list
                folder = '~' + folder;
                if (!_.contains(data.Directories, folder)) {
                    $('#selected_files').append('<li class="directory" rel="' + folder + '">' + folder + ' <span class="delete"></span></li>');

                    data.Directories.push(folder);
                }
            });

            //Delete item from right
            $(document).on("click", ".delete", function () {
                data.Files.splice(data.Files.indexOf($(this).parent().attr('rel')), 1);
                data.Directories.splice(data.Directories.indexOf($(this).parent().attr('rel')), 1);
                $(this).parent().remove();
            });

            //Make list sortable & run FillData()
            $("#selected_files").sortable();
            FillData();


            //Save
            $('#save').click(function (event) {
                FillData();

                var model = {
                    VirtualPath: $('#VirtualPath').val(),
                    DisableMinification: $('#DisableMinification').is(':checked'),
                    Files: data.Files
                };

                $.ajax({
                    type: "POST",
                    url: 'api/PostBundleUpdate?bundleType=@Request["bundleType"]',
                    dataType: 'json',
                    contenttype: 'application/json; charset=utf-8',
                    data: model,
                    success: function () {
                        //Saved file
                        console.log("Saved");
                        //play sound effect

                        snd.play();
                        //Show notification success bubble
                        UmbClientMgr.mainWindow().UmbSpeechBubble.ShowMessage('save', 'Saved Bundle', 'Bundle successfully saved');
                    }
                });
                event.preventDefault();
            });
        });
    </script>
</head>

@if (Optimus.Helpers.CompatibilityHelper.IsVersion7OrNewer)
{
    <body class="umbracoPage">
        <div class="umb-panel form-horizontal umb-panel-nobody">

            <div id="body_body_body_UmbracoPanel_container_header" class="umb-panel-header">
                <div class="row-fluid">
                    <span class="span8">
                        <h1 class="headline">Bundle Editor</h1>
                    </span><span class="span4">
                        <div class="btn-toolbar umb-btn-toolbar">

                            <div class="btn-group">
                                <button type="button" class="btn btn-default dropdownn-toggle" data-toggle="dropdown">
                                    <i class="icon-settings"></i> Settings <span class="caret"></span>
                                </button>
                                <ul class="dropdown-menu" role="menu">

                                    <div>
                                        @Html.EditorFor(m => m.DisableMinification)
                                        @Html.LabelFor(m => m.DisableMinification, new { @class = "control-label" })

                                    </div>
                                    <hr />
                                    <div>
                                        @Html.LabelFor(m => m.VirtualPath, new { @class = "control-label" })
                                        <div>

                                            @Html.EditorFor(m => m.VirtualPath)

                                        </div>
                                        <div>
                                            <small>use with @@@{@exampleScript}.Render("@Model.VirtualPath")</small>
                                        </div>
                                    </div>

                                </ul>
                            </div>
                            <div class="btn-group">
                                <input type="submit" id="save" value="Save" title="Save File" class="btn btn-primary">
                            </div>
                        </div>

                    </span>
                </div>
            </div>







            <div class="umb-pane ">
                <div class="control-group umb-control-group">

                    <p class="umb-abstract">Edit Bundle</p>

                    @* <div class="umb-el-wrap ">
                            @Html.LabelFor(m => m.VirtualPath, new { @class = "control-label" })
                            <div class="controls controls-row">

                                @Html.EditorFor(m => m.VirtualPath)
                                <br/><small>use with @@@{@exampleScript}.Render("@Model.VirtualPath")</small>
                            </div>
                        </div>
                        <div class="umb-el-wrap ">
                            @Html.LabelFor(m => m.DisableMinification, new { @class = "control-label" })
                            <div class="controls controls-row">

                                @Html.EditorFor(m => m.DisableMinification)
                            </div>
                        </div>*@
                    <div class="umb-el-wrap ">
                        @Html.LabelFor(m => m.Files, new { @class = "control-label" })
                        <div class="controls controls-row">

                            <div id="file_tree"></div>
                            <ul id="selected_files" class="jqueryFileTree">
                                @foreach (var file in Model.Files)
                                {
                                    <li class="file ext_@ext" rel="@file">@file <span class="delete"></span></li>
                                }
                            </ul>
                        </div>
                    </div>
                </div>
            </div>

        </div>




    </body>
}
else
{


    <body>


        <div id="body_UmbracoPanel" class="panel" style="width:100%;">
            <div class="boxhead">
                <h2 id="body_UmbracoPanelLabel">Bundle Editor</h2>
            </div>
            <div class="boxbody">
                <div id="body_UmbracoPanel_menubackground" class="menubar_panel">
                    <span id="body_UmbracoPanel_menu">
                        <table id="body_UmbracoPanel_menu_tableContainer">
                            <tbody>
                                <tr id="body_UmbracoPanel_menu_tableContainerRow">
                                    <td id="body_UmbracoPanel_menu_tableContainerButtons">
                                        <button type="submit" id="save">
                                            <img src="/umbraco/images/editor/save.gif" alt="Save Bundle" class="editorIcon" />
                                        </button>
                                    </td>
                                </tr>
                            </tbody>
                        </table>
                    </span>
                </div>
                <div id="body_UmbracoPanel_content" class="content">
                    <div class="innerContent" id="body_UmbracoPanel_innerContent">
                        <h2 class="propertypaneTitel">Edit Bundle</h2>
                        <div class="propertypane">
                            <div>
                                <div class="propertyItem">
                                    <div class="propertyItemheader">@Html.LabelFor(m => m.VirtualPath)</div>
                                    <div class="propertyItemContent">
                                        @Html.EditorFor(m => m.VirtualPath)

                                        @*  @if (UmbracoSettings.GetKey("/settings/templates/defaultRenderingEngine").ToLower() == "mvc")
                                            {
                                        *@<small>use with @@@{@exampleScript}.Render("@Model.VirtualPath")</small>
                                        @* }
                                            else
                                            {
                                            <small>use with <%: @{@exampleScript}.Render("@Model.VirtualPath") %></small>
                                            }*@
                                    </div>
                                </div>

                                <div class="propertyItem">
                                    <div class="propertyItemheader">@Html.LabelFor(m => m.DisableMinification)</div>
                                    <div class="propertyItemContent">
                                        @Html.EditorFor(m => m.DisableMinification)
                                    </div>
                                </div>



                                <div class="propertyItem">
                                    <div class="propertyItemheader">@Html.LabelFor(m => m.Files)</div>
                                    <div class="propertyItemContent">
                                        <div id="file_tree"></div>
                                        <ul id="selected_files" class="jqueryFileTree">
                                            @foreach (var file in Model.Files)
                                            {
                                                <li class="file ext_@ext" rel="@file">@file <span class="delete"></span></li>
                                            }
                                        </ul>
                                    </div>
                                </div>

                                <div class="propertyPaneFooter">-</div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="boxfooter">
                <div class="statusBar">
                    <h2></h2>
                </div>
            </div>
        </div>
    </body>
}
</html>
